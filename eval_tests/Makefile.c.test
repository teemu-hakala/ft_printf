# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    Makefile.c.test                                    :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: thakala <thakala@student.hive.fi>          +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2022/02/14 12:01:16 by thakala           #+#    #+#              #
#    Updated: 2022/03/21 11:29:21 by thakala          ###   ########.fr        #
#                                                                              #
# **************************************************************************** #

NAME = $(OUTPUT_PATHS)

MAX_TEST_CASE = 3

## Create a subdirectory for each test case and number them from 0 each.
## sources/c/000_main_c.c.test
MAX_TEST_CASE_c = 0
MAX_TEST_CASE_s = 0
MAX_TEST_CASE_p = 0
MAX_TEST_CASE_d = 0
MAX_TEST_CASE_i = 0
MAX_TEST_CASE_o = 0
MAX_TEST_CASE_u = 0
MAX_TEST_CASE_x = 0
MAX_TEST_CASE_X = 0
MAX_TEST_CASE_f = 0
MAX_TEST_CASE_percentage = 0
MAX_TEST_CASE_e = 0
MAX_TEST_CASE_g = 0
MAX_TEST_CASE_b = 0
MAX_TEST_CASE_r = 0
MAX_TEST_CASE_k = 0

FT_PRINTF = ../libftprintf.a

HELPERS = libraries/helpers/libhelp.a

FILES = $(addprefix main, $(shell seq -f %03g 0 $(MAX_TEST_CASE)))

CTEST_SUFFIX = .c.test
OUTPUT_SUFFIX = .out
OBJECT_SUFFIX = .o
HEADER_SUFFIX = .h.c.test

SOURCES = sources
OBJECTS = objects
INCLUDES = includes
LIBRARIES = libraries ..
PROGRAMS = programs
OUTPUTS = $(PROGRAMS)/output

FOLDER_LIST = \
	$(SOURCES) \
	$(OBJECTS) \
	$(INCLUDES) \
	$(LIBRARIES) \
	$(PROGRAMS) \
	$(OUTPUTS)

LIB_LIST = \
	help \
	ftprintf

H_FILES = eval_tests

CTEST_PATHS = $(addsuffix $(CTEST_SUFFIX), $(addprefix $(SOURCES)/, $(FILES)))
H_PATHS = $(addsuffix $(HEADER_SUFFIX), $(addprefix $(INCLUDES)/, $(H_FILES))) \
	libraries/helpers/includes/helpers$(HEADER_SUFFIX) \
	../includes/ft_printf.h
INCLUSIONS = $(foreach inc, \
	$(INCLUDES) \
	libraries/helpers/includes/ \
	../includes/, -I $(inc))
OBJECT_PATHS = $(addsuffix $(OBJECT_SUFFIX), $(addprefix $(OBJECTS)/, $(FILES)))
OUTPUT_FILES = $(addsuffix $(OUTPUT_SUFFIX), $(FILES))
OUTPUT_PATHS = $(addprefix $(PROGRAMS)/, $(OUTPUT_FILES))

CC = clang
CFLAGS = -Wall -Wextra -Werror
CFLAGS += -g -Wconversion

.PHONY: all
all: $(NAME)

$(NAME): $(PROGRAMS)/%$(OUTPUT_SUFFIX):$(OBJECTS)/%$(OBJECT_SUFFIX) .pre_requisites Makefile.c.test
	touch .pre_requisites
	$(CC) $(CFLAGS) -o $@ $< \
		$(foreach lib_path, $(LIBRARIES), -L$(lib_path)) \
		$(foreach lib, $(LIB_LIST), -l$(lib))

$(OBJECT_PATHS): $(OBJECTS)/%.o:$(SOURCES)/%.c.test $(H_PATHS) Makefile.c.test
	$(CC) $(CFLAGS) $(INCLUSIONS) -xc -c $< -o $@


.pre_requisites: $(FT_PRINTF) $(HELPERS) $(FOLDER_LIST) $(H_PATHS) $(CTEST_PATHS)

$(FT_PRINTF):
	make -C ..

$(HELPERS):
	make -C libraries/helpers/ -f Makefile.c.test

$(FOLDER_LIST):
	mkdir -p $@

$(H_PATHS):
	touch $@

$(CTEST_PATHS):
	touch $@

OUTPUT_PATHS_RUN = $(addprefix run-, $(OUTPUT_PATHS))

.PHONY: test
test: all clear_output $(OUTPUT_PATHS_RUN)
	@echo "Ran all test cases!"

$(OUTPUT_PATHS_RUN):
	@echo "RUNNING:\t\t$(patsubst run-%, %, $@)"
	$(shell (cd programs && ./$(strip $(patsubst run-programs/%, %, $@))))

OUTPUT_CASES = $(addprefix $(OUTPUTS)/, $(shell seq -f %03g 0 $(MAX_TEST_CASE)))
LIBC_OUTPUTS = $(addsuffix .libc.output, $(OUTPUT_CASES))
FT_OUTPUTS = $(addsuffix .ft.output, $(OUTPUT_CASES))

.PHONY: clear_output
clear_output:
	/bin/rm -f $(LIBC_OUTPUTS) $(FT_OUTPUTS)

.PHONY: clean
clean:
	/bin/rm -f $(OBJECT_PATHS)

.PHONY: fclean
fclean: clean
	/bin/rm -f $(NAME)

.PHONY: re
re: fclean all
